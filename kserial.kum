|
| Kumir Serialization API
| @author Tapeline
| @version 1
| 

алг сим __hexd(арг цел н) 
дано 0 <= н <= 15
нач 
если 0 <= н <= 9 то
знач := юнисимвол(юникод('0') + н)
иначе
знач := юнисимвол(юникод('a') + н - 10)
все
кон

алг цел __dfromhex(арг сим с) нач 
если юникод('0') <= юникод(с) <= юникод('9') то
знач := юникод(с) - юникод('0')
иначе
знач := юникод(с) - юникод('a') + 10
все
кон

алг лит hex(арг цел н, арг цел размер) нач
лит результат = ""
цел число 
число := н
нц пока число > 0
результат := __hexd(mod(число, 16)) + результат
число := div(число, 16)
кц
если размер > 0 то
нц пока длин(результат) < размер
результат := "0" + результат
кц
все
знач := результат
кон

алг цел hexToDec(арг лит h) нач
цел степ = 1
цел н = 0
цел индекс
индекс := длин(h)
нц пока индекс >= 1
н := н + __dfromhex(h[индекс]) * степ
степ := степ * 16
индекс := индекс - 1
кц
знач := н
кон

алг лит сериализовать(арг лит данные) нач
лит результат = ""
цел индекс = 1
нц для индекс от 1 до длин(данные)
результат := результат + hex(юникод(данные[индекс]), 4)
кц
знач := результат
кон

алг лит десериализовать(арг лит данные) нач
лит результат = ""
цел индекс = 1
нц пока индекс <= длин(данные)
результат := результат + юнисимвол(hexToDec(данные[индекс:индекс+3]))
индекс := индекс + 4
кц
знач := результат
кон
